$ ./build_image.sh 
-----------------------------------
Checking for dependencies...
-----------------------------------
Base docker image [found] (ubuntu:18.04.2)
Keyboard Configuration: [Good] configs/keyboard_settings.conf
Xilinx MALI Binaries: [Good] depends/mali-400-userspace.tar
Xilinx Petalinux Installer: [Good] depends/petalinux-v2020.1-final-installer.run
-----------------------------------
Docker Build Context (Working)...
-----------------------------------
+ cd /xilinx/local/repositories/gitlab/xilinx-docker/recipes/automated-images/petalinux/v2020.1
+ '[' 1 -ne 0 ']'
+ set +x
DOCKER_INSTALL_DIR=.
DOCKER_BUILD_WORKING_DIR=/xilinx/local/repositories/gitlab/xilinx-docker/recipes/automated-images/petalinux/v2020.1
-----------------------------------
-----------------------------------
Launching Python HTTP Server...
-----------------------------------
+ SERVER_PID=29156
+ python3 -m http.server
++ ifconfig docker0
++ grep 'inet\s'
++ awk '{print $2}'
+ SERVER_IP=172.17.0.1
+ '[' 1 -ne 0 ']'
+ set +x
SERVER_IP=172.17.0.1
SERVER_PID=29156
-----------------------------------
-----------------------------------
Building the Docker Image...
-------------------------------
DOCKER_CACHE=--no-cache
DOCKER_FILE_NAME=Dockerfile
DOCKER_FILE_STAGE=xilinx_install_petalinux_v2020.1
DOCKER_IMAGE=xilinx-petalinux:v2020.1
DOCKER_INSTALL_DIR=.
INSTALL_SERVER_URL=172.17.0.1:8000
-----------------------------------
Arguments...
-----------------------------------
        --build-arg USER_ACCT="xilinx"
        --build-arg HOME_DIR="/home/xilinx"
        --build-arg XLNX_INSTALL_LOCATION="/opt/Xilinx"
  --build-arg DOCKER_BUILD_INCLUDE_XLNX_MALI="1"
  --build-arg XLNX_MALI_BINARY="depends/mali-400-userspace.tar"
        --build-arg INSTALL_SERVER_URL="172.17.0.1:8000"
        --build-arg XLNX_PETALINUX_INSTALLER="depends/petalinux-v2020.1-final-installer.run"
  --build-arg XLNX_PETALINUX_AUTOINSTALL_SCRIPT="autoinstall_petalinux.sh"
  --build-arg XLNX_PETALINUX_INSTALL_DIR="/opt/Xilinx/petalinux/v2020.1"
  --build-arg BUILD_DEBUG="1"
-----------------------------------
+ docker build --no-cache -f ./Dockerfile --target xilinx_install_petalinux_v2020.1 -t xilinx-petalinux:v2020.1 --build-arg USER_ACCT=xilinx --build-arg HOME_DIR=/home/xilinx --build-arg XLNX_INSTALL_LOCATION=/opt/Xilinx --build-arg DOCKER_BUILD_INCLUDE_XLNX_MALI=1 --build-arg XLNX_MALI_BINARY=depends/mali-400-userspace.tar --build-arg INSTALL_SERVER_URL=172.17.0.1:8000 --build-arg XLNX_PETALINUX_INSTALLER=depends/petalinux-v2020.1-final-installer.run --build-arg XLNX_PETALINUX_AUTOINSTALL_SCRIPT=autoinstall_petalinux.sh --build-arg XLNX_PETALINUX_INSTALL_DIR=/opt/Xilinx/petalinux/v2020.1 --build-arg BUILD_DEBUG=1 .
Sending build context to Docker daemon  15.36kB
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
Step 1/16 : FROM xilinx-ubuntu-18.04.2-user:v2020.1 AS xilinx_install_petalinux_v2020.1
 ---> 371b01c68a88
Step 2/16 : LABEL author="Jason Moss"
 ---> Running in 37307553b825
Removing intermediate container 37307553b825
 ---> ba2a0c4d8084
Step 3/16 : ARG USER_ACCT
 ---> Running in c9ab9c2cf8d7
Removing intermediate container c9ab9c2cf8d7
 ---> 51188a2759e6
Step 4/16 : ARG HOME_DIR
 ---> Running in a7cf7b0a150f
Removing intermediate container a7cf7b0a150f
 ---> 971be3b162f1
Step 5/16 : ARG XLNX_INSTALL_LOCATION
 ---> Running in 268d323026db
Removing intermediate container 268d323026db
 ---> 3e0b77cbe83c
Step 6/16 : ARG DOCKER_BUILD_INCLUDE_XLNX_MALI
 ---> Running in 836dcd7677dc
Removing intermediate container 836dcd7677dc
 ---> 33541a445bf7
Step 7/16 : ARG INSTALL_SERVER_URL
 ---> Running in a04ea08d996b
Removing intermediate container a04ea08d996b
 ---> 15ed37423fbc
Step 8/16 : ARG BUILD_DEBUG
 ---> Running in 409ec4f04e32
Removing intermediate container 409ec4f04e32
 ---> ac67a7e6395e
Step 9/16 : ARG XLNX_MALI_BINARY
 ---> Running in 850e3acdf702
Removing intermediate container 850e3acdf702
 ---> 0b02d2fd1058
Step 10/16 : ARG XLNX_PETALINUX_INSTALLER
 ---> Running in b728548e74b2
Removing intermediate container b728548e74b2
 ---> 9365d4429990
Step 11/16 : ARG XLNX_PETALINUX_AUTOINSTALL_SCRIPT
 ---> Running in 9120d7c9f554
Removing intermediate container 9120d7c9f554
 ---> d802c2eac34b
Step 12/16 : ARG XLNX_PETALINUX_INSTALL_DIR
 ---> Running in 0fbcf92f2dae
Removing intermediate container 0fbcf92f2dae
 ---> 8a87bc5154cc
Step 13/16 : USER $USER_ACCT
 ---> Running in f86ba37a8a04
Removing intermediate container f86ba37a8a04
 ---> 6cf9a5266692
Step 14/16 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Running in e7d502023372
Removing intermediate container e7d502023372
 ---> aff39f5758fc
Step 15/16 : RUN if [ $BUILD_DEBUG -ne 0 ]; then set -x; fi     && sudo mkdir -p $XLNX_INSTALL_LOCATION/tmp     && sudo chown -R $USER_ACCT:$USER_ACCT $XLNX_INSTALL_LOCATION
 ---> Running in d544adbe5d57
+ sudo mkdir -p /opt/Xilinx/tmp
+ sudo chown -R xilinx:xilinx /opt/Xilinx
Removing intermediate container d544adbe5d57
 ---> 788076c25a45
Step 16/16 : RUN if [ $DOCKER_BUILD_INCLUDE_XLNX_MALI -ne 0 ]; then             mkdir -p $XLNX_INSTALL_LOCATION/downloads/tmp;          cd $XLNX_INSTALL_LOCATION/downloads/tmp;                mkdir -p "${XLNX_MALI_BINARY%/*}";              wget -nv $INSTALL_SERVER_URL/$XLNX_MALI_BINARY -O $XLNX_MALI_BINARY;            tar xf $XLNX_MALI_BINARY mali/rel-v2019.1/downloads-mali.tar;           tar xf mali/rel-v2019.1/downloads-mali.tar;            mv $XLNX_INSTALL_LOCATION/downloads/tmp/downloads-mali/* $XLNX_INSTALL_LOCATION/downloads;               rm -rf $XLNX_INSTALL_LOCATION/downloads/tmp;    fi      && cd $XLNX_INSTALL_LOCATION/tmp        && mkdir -p "${XLNX_PETALINUX_INSTALLER%/*}"    && wget -nv $INSTALL_SERVER_URL/$XLNX_PETALINUX_INSTALLER -O $XLNX_PETALINUX_INSTALLER  && wget -nv $INSTALL_SERVER_URL/$XLNX_PETALINUX_AUTOINSTALL_SCRIPT      && dos2unix -ascii -q $XLNX_PETALINUX_AUTOINSTALL_SCRIPT        && echo "cd $XLNX_PETALINUX_INSTALL_DIR" >> $HOME_DIR/.bashrc   && echo "export LANG=en_US.UTF-8" >> $HOME_DIR/.bashrc  && export "LANG=en_US.UTF-8"    && chmod a+x $XLNX_PETALINUX_INSTALLER  && chmod a+x $XLNX_PETALINUX_AUTOINSTALL_SCRIPT         && cd $XLNX_INSTALL_LOCATION/tmp        && cat ./$XLNX_PETALINUX_AUTOINSTALL_SCRIPT     && export TERM=xterm    && mkdir -p $XLNX_PETALINUX_INSTALL_DIR         && ./$XLNX_PETALINUX_AUTOINSTALL_SCRIPT $XLNX_PETALINUX_INSTALLER "$XLNX_PETALINUX_INSTALL_DIR"         && echo ". $XLNX_PETALINUX_INSTALL_DIR/settings.sh" >> $HOME_DIR/.bashrc        && . $XLNX_PETALINUX_INSTALL_DIR/settings.sh    && petalinux-util --webtalk off         && rm -rf $XLNX_INSTALL_LOCATION/tmp    && sudo apt-get clean   && sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   && sudo echo 'debconf debconf/frontend select Dialog' | sudo debconf-set-selections
 ---> Running in 533c7f48acb1
172.17.0.2 - - [15/Jul/2020 12:41:49] "GET /depends/mali-400-userspace.tar HTTP/1.1" 200 -
2020-07-15 16:41:49 URL:http://172.17.0.1:8000/depends/mali-400-userspace.tar [572887040/572887040] -> "depends/mali-400-userspace.tar" [1]
172.17.0.2 - - [15/Jul/2020 12:41:50] "GET /depends/petalinux-v2020.1-final-installer.run HTTP/1.1" 200 -
2020-07-15 16:41:51 URL:http://172.17.0.1:8000/depends/petalinux-v2020.1-final-installer.run [1315548907/1315548907] -> "depends/petalinux-v2020.1-final-installer.run" [1]
172.17.0.2 - - [15/Jul/2020 12:41:52] "GET /autoinstall_petalinux.sh HTTP/1.1" 200 -
2020-07-15 16:41:52 URL:http://172.17.0.1:8000/autoinstall_petalinux.sh [3539/3539] -> "autoinstall_petalinux.sh" [1]
#!/usr/bin/expect
# This is a generic template that can be filled out to
# automate any installation that requires automated user input.
#
# Number of arguments = [llength $argv]
set argcount [llength $argv];

set timeout -1;
# Arguments: 
# (1) - Installer package name
set installer_exec [lindex $argv 0];
# (2) - Installer arguments
#     - ARG1 = petalinux installation directory
set argument_one [lindex $argv 1];

# Launch the installer
# as of 2020.1, the installer requires the "-d" switch to specify an install folder
spawn $installer_exec -d $argument_one

#############################################################
# Start monitoring the installer progress
#############################################################
# INFO: Checking installation environment requirements...
set timeout 10
expect {
        "*INFO: Checking installation environment requirements...*" { }
        timeout {
                puts "Exiting due to timeout (installation environment requirements)"
                exit 1
        }
}

# INFO: Checking installer checksum...
set timeout 100
expect { 
        "*INFO: Checking installer checksum...*" { }
        timeout {
                puts "Exiting due to timeout (installer checksum)"
                exit 1
        }
}

# INFO: Extracting PetaLinux installer...
set timeout 300
expect { 
        "*INFO: Extracting PetaLinux installer...*" { }
        timeout {
                puts "Exiting due to timeout (installer extraction)"
                exit 1
        }
}

# Press Enter to display the license agreements
set timeout 600 
expect { 
        "*Press Enter to display the license agreements*" { }
        timeout {
                puts "Exiting due to timeout (display license agreements)"
                exit 1
        }
}
send "\r"

# END USER LICENSE AGREEMENT FOR PETALINUX TOOLS
set timeout 10
expect { 
        "*END USER LICENSE AGREEMENT FOR PETALINUX TOOLS*" { }
        timeout {
                puts "Exiting due to timeout (petalinux eula)"
                exit 1
        }
}
send "q"

# Do you accept Xilinx End User License Agreement? [y/N] >
# 'Do you accept Xilinx End User License Agreement? \[y\/N\] \>' { }

set timeout 60
expect {
        "*Do you accept Xilinx End User License Agreement?*" { }
        timeout {
                puts "Exiting due to timeout (accept petalinux eula)"
                exit 1
        }
}
send "y\r"

# WebTalk Terms and Conditions
set timeout 10
expect {
        "*WebTalk Terms and Conditions*" { }
        timeout {
                puts "Exiting due to timeout (webtalk tcs)"
                exit 1
        }
}
send "q"

# Do you accept Webtalk Terms and Conditions? [y/N] >
set timeout 10
expect {
        "*Do you accept Webtalk Terms and Conditions?*" { }
        timeout {
                puts "Exiting due to timeout (accept webtalk tcs)"
                exit 1
        }
}
send "y\r"

# CAREFULLY READ THIS COLLECTION OF INFORMATION AND LICENSE AGREEMENTS.
set timeout 10
expect {
        "*CAREFULLY READ THIS COLLECTION OF INFORMATION AND LICENSE AGREEMENTS.*" { }
        timeout {
                puts "Exiting due to timeout (third party eula)"
                exit 1
        }
}
send "q"

# Do you accept Third Party End User License Agreement? [y/N] > 
set timeout 10
expect {
        "*Do you accept Third Party End User License Agreement?*" { }
        timeout {
                puts "Exiting due to timeout (accept third party eula)"
                exit 1
        }
}
send "y\r"

# INFO: Installing PetaLinux...
set timeout 300
expect {
        "*INFO: Installing PetaLinux...*" { }
        timeout {
                puts "Exiting due to timeout (petalinux install)"
                exit 1
        }
}

# WARNING: PetaLinux installation directory ... is not empty!
set timeout 10
expect {
        "*WARNING: Petalinux installation directory*" {
                send "y\r"
        }
}

# INFO: PetaLinux SDK has been installed
set timeout 1200
expect {
        "*INFO: PetaLinux SDK has been installed*" { }
        timeout {
                puts "Exiting due to timeout (sdk install)"
                exit 1
        }
}

expect eofspawn depends/petalinux-v2020.1-final-installer.run -d /opt/Xilinx/petalinux/v2020.1
INFO: Checking installation environment requirements...
INFO: Checking free disk space
INFO: Checking installed tools
INFO: Checking installed development libraries
INFO: Checking network and other services
WARNING: No tftp server found - please refer to "UG1144  PetaLinux Tools Documentation Reference Guide" for its impact and solution
INFO: Checking installer checksum...
INFO: Extracting PetaLinux installer...

LICENSE AGREEMENTS

PetaLinux SDK contains software from a number of sources.  Please review
the following licenses and indicate your acceptance of each to continue.

You do not have to accept the licenses, however if you do not then you may 
not use PetaLinux SDK.

Use PgUp/PgDn to navigate the license viewer, and press 'q' to close

Press Enter to display the license agreements
Do you accept Xilinx End User License Agreement? [y/N] > y
Do you accept Webtalk Terms and Conditions? [y/N] > y
Do you accept Third Party End User License Agreement? [y/N] > y
INFO: Installing PetaLinux...
INFO: Checking PetaLinux installer integrity...
INFO: Installing PetaLinux SDK to "/opt/Xilinx/petalinux/v2020.1/."
INFO: Installing buildtools in /opt/Xilinx/petalinux/v2020.1/./components/yocto/buildtools
INFO: PetaLinux SDK has been installed to /opt/Xilinx/petalinux/v2020.1/.
PetaLinux environment set to '/opt/Xilinx/petalinux/v2020.1'
INFO: Checking free disk space
INFO: Checking installed tools
INFO: Checking installed development libraries
INFO: Checking network and other services
WARNING: No tftp server found - please refer to "UG1144 2020.1 PetaLinux Tools Documentation Reference Guide" for its impact and solution
INFO: Turn off webtalk feature!
Removing intermediate container 533c7f48acb1
 ---> 2fd9179f459d
Successfully built 2fd9179f459d
Successfully tagged xilinx-petalinux:v2020.1
+ '[' 1 -ne 0 ']'
+ set +x
-----------------------------------
Shutting down Python HTTP Server...
-----------------------------------
Killing process ID 29156
-----------------------------------
+ kill 29156
+ '[' 1 -ne 0 ']'
+ set +x
./build_image.sh: line 174: 29156 Terminated              python3 -m http.server
-----------------------------------
Image Build Complete...
STARTED :Wed Jul 15 12:41:36 EDT 2020
ENDED   :Wed Jul 15 12:46:58 EDT 2020
-----------------------------------