$ ./build_image.sh 
-----------------------------------
Checking for dependencies...
-----------------------------------
Base docker image [found] (xilinx-ubuntu-18.04.2-user:v2020.1)
Xilinx Petalinux Installer: [Good] depends/petalinux-v2020.1-final-installer.run
-----------------------------------
Docker Build Context (Working)...
-----------------------------------
+ cd /xilinx/local/repositories/gitlab/xilinx-docker/recipes/automated-images/petalinux/v2020.1
+ '[' 1 -ne 0 ']'
+ set +x
DOCKER_INSTALL_DIR=.
DOCKER_BUILD_WORKING_DIR=/xilinx/local/repositories/gitlab/xilinx-docker/recipes/automated-images/petalinux/v2020.1
-----------------------------------
-----------------------------------
Launching Python HTTP Server...
-----------------------------------
+ SERVER_PID=27096
+ python3 -m http.server
++ ifconfig docker0
++ grep 'inet\s'
++ awk '{print $2}'
+ SERVER_IP=172.17.0.1
+ '[' 1 -ne 0 ']'
+ set +x
SERVER_IP=172.17.0.1
SERVER_PID=27096
-----------------------------------
-----------------------------------
Building the Docker Image...
-------------------------------
DOCKER_CACHE=--no-cache
DOCKER_FILE_NAME=Dockerfile
DOCKER_FILE_STAGE=xilinx_install_petalinux_v2020.1
DOCKER_IMAGE=xilinx-petalinux:v2020.1
DOCKER_INSTALL_DIR=.
INSTALL_SERVER_URL=172.17.0.1:8000
-----------------------------------
Arguments...
-----------------------------------
        --build-arg USER_ACCT="xilinx"
        --build-arg HOME_DIR="/home/xilinx"
        --build-arg XLNX_INSTALL_LOCATION="/opt/Xilinx"
  --build-arg DOCKER_BUILD_INCLUDE_XLNX_MALI="0"
  --build-arg XLNX_MALI_BINARY="depends/mali-400-userspace.tar"
        --build-arg INSTALL_SERVER_URL="172.17.0.1:8000"
        --build-arg XLNX_PETALINUX_INSTALLER="depends/petalinux-v2020.1-final-installer.run"
  --build-arg XLNX_PETALINUX_AUTOINSTALL_SCRIPT="autoinstall_petalinux.sh"
  --build-arg XLNX_PETALINUX_INSTALL_DIR="/opt/Xilinx/petalinux/v2020.1"
  --build-arg BUILD_DEBUG="1"
-----------------------------------
+ docker build --no-cache -f ./Dockerfile --target xilinx_install_petalinux_v2020.1 -t xilinx-petalinux:v2020.1 --build-arg USER_ACCT=xilinx --build-arg HOME_DIR=/home/xilinx --build-arg XLNX_INSTALL_LOCATION=/opt/Xilinx --build-arg DOCKER_BUILD_INCLUDE_XLNX_MALI=0 --build-arg XLNX_MALI_BINARY=depends/mali-400-userspace.tar --build-arg INSTALL_SERVER_URL=172.17.0.1:8000 --build-arg XLNX_PETALINUX_INSTALLER=depends/petalinux-v2020.1-final-installer.run --build-arg XLNX_PETALINUX_AUTOINSTALL_SCRIPT=autoinstall_petalinux.sh --build-arg XLNX_PETALINUX_INSTALL_DIR=/opt/Xilinx/petalinux/v2020.1 --build-arg BUILD_DEBUG=1 .
Sending build context to Docker daemon  15.36kB
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
Step 1/15 : FROM xilinx-ubuntu-18.04.2-user:v2020.1 AS xilinx_install_petalinux_v2020.1
 ---> 371b01c68a88
Step 2/15 : LABEL author="Jason Moss"
 ---> Running in 3f52c3c6d0b2
Removing intermediate container 3f52c3c6d0b2
 ---> 01615351a0bf
Step 3/15 : ARG USER_ACCT
 ---> Running in e7d10124afa1
Removing intermediate container e7d10124afa1
 ---> 32d57ad91d12
Step 4/15 : ARG HOME_DIR
 ---> Running in b063acba48bc
Removing intermediate container b063acba48bc
 ---> ac2f78620365
Step 5/15 : ARG XLNX_INSTALL_LOCATION
 ---> Running in b5bd3e20ce22
Removing intermediate container b5bd3e20ce22
 ---> e71099fb1db9
Step 6/15 : ARG DOCKER_BUILD_INCLUDE_XLNX_MALI
 ---> Running in 116a789dbdd1
Removing intermediate container 116a789dbdd1
 ---> 681eb7a55125
Step 7/15 : ARG INSTALL_SERVER_URL
 ---> Running in f18be2dd21e7
Removing intermediate container f18be2dd21e7
 ---> 731962c6881d
Step 8/15 : ARG BUILD_DEBUG
 ---> Running in 7440982a6f68
Removing intermediate container 7440982a6f68
 ---> 13eba2556540
Step 9/15 : ARG XLNX_MALI_BINARY
 ---> Running in 3967645d95d7
Removing intermediate container 3967645d95d7
 ---> 229caeda4db0
Step 10/15 : ARG XLNX_PETALINUX_INSTALLER
 ---> Running in af05eb14670b
Removing intermediate container af05eb14670b
 ---> b66344f46f9a
Step 11/15 : ARG XLNX_PETALINUX_AUTOINSTALL_SCRIPT
 ---> Running in 2951efc062f3
Removing intermediate container 2951efc062f3
 ---> 63478b12f92d
Step 12/15 : ARG XLNX_PETALINUX_INSTALL_DIR
 ---> Running in 1eebc384fde3
Removing intermediate container 1eebc384fde3
 ---> 084265064bf2
Step 13/15 : USER $USER_ACCT
 ---> Running in a5d70a58a446
Removing intermediate container a5d70a58a446
 ---> 4be2971fea14
Step 14/15 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Running in 513c02ab0308
Removing intermediate container 513c02ab0308
 ---> bccb770ee242
Step 15/15 : RUN if [ $BUILD_DEBUG -ne 0 ]; then set -x; fi     && sudo mkdir -p $XLNX_INSTALL_LOCATION/tmp     && sudo chown -R $USER_ACCT:$USER_ACCT $XLNX_INSTALL_LOCATION   && if [[ $DOCKER_BUILD_INCLUDE_XLNX_MALI -ne 0 ]]; then                 mkdir -p $XLNX_INSTALL_LOCATION/downloads/tmp           && cd $XLNX_INSTALL_LOCATION/downloads/tmp              && mkdir -p "${XLNX_MALI_BINARY%/*}"            && wget -nv $INSTALL_SERVER_URL/$XLNX_MALI_BINARY -O $XLNX_MALI_BINARY          && tar xf $XLNX_MALI_BINARY mali/rel-v2020.1/downloads-mali.tar                 && tar xf mali/rel-v2020.1/downloads-mali.tar           && mv $XLNX_INSTALL_LOCATION/downloads/tmp/downloads-mali/* $XLNX_INSTALL_LOCATION/downloads            && rm -rf $XLNX_INSTALL_LOCATION/downloads/tmp;         fi      && cd $XLNX_INSTALL_LOCATION/tmp        && mkdir -p "${XLNX_PETALINUX_INSTALLER%/*}"    && wget -nv $INSTALL_SERVER_URL/$XLNX_PETALINUX_INSTALLER -O $XLNX_PETALINUX_INSTALLER  && wget -nv $INSTALL_SERVER_URL/$XLNX_PETALINUX_AUTOINSTALL_SCRIPT      && dos2unix -ascii -q $XLNX_PETALINUX_AUTOINSTALL_SCRIPT        && echo "cd $XLNX_PETALINUX_INSTALL_DIR" >> $HOME_DIR/.bashrc   && echo "export LANG=en_US.UTF-8" >> $HOME_DIR/.bashrc  && export "LANG=en_US.UTF-8"    && chmod a+x $XLNX_PETALINUX_INSTALLER  && chmod a+x $XLNX_PETALINUX_AUTOINSTALL_SCRIPT&& cd $XLNX_INSTALL_LOCATION/tmp         && cat ./$XLNX_PETALINUX_AUTOINSTALL_SCRIPT     && export TERM=xterm    && mkdir -p $XLNX_PETALINUX_INSTALL_DIR         && ./$XLNX_PETALINUX_AUTOINSTALL_SCRIPT $XLNX_PETALINUX_INSTALLER "$XLNX_PETALINUX_INSTALL_DIR"         && echo ". $XLNX_PETALINUX_INSTALL_DIR/settings.sh" >> $HOME_DIR/.bashrc        && . $XLNX_PETALINUX_INSTALL_DIR/settings.sh    && petalinux-util --webtalk off         && rm -rf $XLNX_INSTALL_LOCATION/tmp    && sudo apt-get clean   && sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   && sudo echo 'debconf debconf/frontend select Dialog' | sudo debconf-set-selections
 ---> Running in 8ca901cbdcd6
+ sudo mkdir -p /opt/Xilinx/tmp
+ sudo chown -R xilinx:xilinx /opt/Xilinx
+ [[ 0 -ne 0 ]]
+ cd /opt/Xilinx/tmp
+ mkdir -p depends
+ wget -nv 172.17.0.1:8000/depends/petalinux-v2020.1-final-installer.run -O depends/petalinux-v2020.1-final-installer.run
172.17.0.2 - - [16/Jul/2020 14:28:26] "GET /depends/petalinux-v2020.1-final-installer.run HTTP/1.1" 200 -
2020-07-16 18:28:32 URL:http://172.17.0.1:8000/depends/petalinux-v2020.1-final-installer.run [1315548907/1315548907] -> "depends/petalinux-v2020.1-final-installer.run" [1]
+ wget -nv 172.17.0.1:8000/autoinstall_petalinux.sh
172.17.0.2 - - [16/Jul/2020 14:28:32] "GET /autoinstall_petalinux.sh HTTP/1.1" 200 -
2020-07-16 18:28:32 URL:http://172.17.0.1:8000/autoinstall_petalinux.sh [3539/3539] -> "autoinstall_petalinux.sh" [1]
+ dos2unix -ascii -q autoinstall_petalinux.sh
+ echo 'cd /opt/Xilinx/petalinux/v2020.1'
+ echo 'export LANG=en_US.UTF-8'
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ chmod a+x depends/petalinux-v2020.1-final-installer.run
+ chmod a+x autoinstall_petalinux.sh
+ cd /opt/Xilinx/tmp
+ cat ./autoinstall_petalinux.sh
#!/usr/bin/expect
# This is a generic template that can be filled out to
# automate any installation that requires automated user input.
#
# Number of arguments = [llength $argv]
set argcount [llength $argv];

set timeout -1;
# Arguments: 
# (1) - Installer package name
set installer_exec [lindex $argv 0];
# (2) - Installer arguments
#     - ARG1 = petalinux installation directory
set argument_one [lindex $argv 1];

# Launch the installer
# as of 2020.1, the installer requires the "-d" switch to specify an install folder
spawn $installer_exec -d $argument_one

#############################################################
# Start monitoring the installer progress
#############################################################
# INFO: Checking installation environment requirements...
set timeout 10
expect {
        "*INFO: Checking installation environment requirements...*" { }
        timeout {
                puts "Exiting due to timeout (installation environment requirements)"
                exit 1
        }
}

# INFO: Checking installer checksum...
set timeout 100
expect { 
        "*INFO: Checking installer checksum...*" { }
        timeout {
                puts "Exiting due to timeout (installer checksum)"
                exit 1
        }
}

# INFO: Extracting PetaLinux installer...
set timeout 300
expect { 
        "*INFO: Extracting PetaLinux installer...*" { }
        timeout {
                puts "Exiting due to timeout (installer extraction)"
                exit 1
        }
}

# Press Enter to display the license agreements
set timeout 600 
expect { 
        "*Press Enter to display the license agreements*" { }
        timeout {
                puts "Exiting due to timeout (display license agreements)"
                exit 1
        }
}
send "\r"

# END USER LICENSE AGREEMENT FOR PETALINUX TOOLS
set timeout 10
expect { 
        "*END USER LICENSE AGREEMENT FOR PETALINUX TOOLS*" { }
        timeout {
                puts "Exiting due to timeout (petalinux eula)"
                exit 1
        }
}
send "q"

# Do you accept Xilinx End User License Agreement? [y/N] >
# 'Do you accept Xilinx End User License Agreement? \[y\/N\] \>' { }

set timeout 60
expect {
        "*Do you accept Xilinx End User License Agreement?*" { }
        timeout {
                puts "Exiting due to timeout (accept petalinux eula)"
                exit 1
        }
}
send "y\r"

# WebTalk Terms and Conditions
set timeout 10
expect {
        "*WebTalk Terms and Conditions*" { }
        timeout {
                puts "Exiting due to timeout (webtalk tcs)"
                exit 1
        }
}
send "q"

# Do you accept Webtalk Terms and Conditions? [y/N] >
set timeout 10
expect {
        "*Do you accept Webtalk Terms and Conditions?*" { }
        timeout {
                puts "Exiting due to timeout (accept webtalk tcs)"
                exit 1
        }
}
send "y\r"

# CAREFULLY READ THIS COLLECTION OF INFORMATION AND LICENSE AGREEMENTS.
set timeout 10
expect {
        "*CAREFULLY READ THIS COLLECTION OF INFORMATION AND LICENSE AGREEMENTS.*" { }
        timeout {
                puts "Exiting due to timeout (third party eula)"
                exit 1
        }
}
send "q"

# Do you accept Third Party End User License Agreement? [y/N] > 
set timeout 10
expect {
        "*Do you accept Third Party End User License Agreement?*" { }
        timeout {
                puts "Exiting due to timeout (accept third party eula)"
                exit 1
        }
}
send "y\r"

# INFO: Installing PetaLinux...
set timeout 300
expect {
        "*INFO: Installing PetaLinux...*" { }
        timeout {
                puts "Exiting due to timeout (petalinux install)"
                exit 1
        }
}

# WARNING: PetaLinux installation directory ... is not empty!
set timeout 10
expect {
        "*WARNING: Petalinux installation directory*" {
                send "y\r"
        }
}

# INFO: PetaLinux SDK has been installed
set timeout 1200
expect {
        "*INFO: PetaLinux SDK has been installed*" { }
        timeout {
                puts "Exiting due to timeout (sdk install)"
                exit 1
        }
}

expect eof+ export TERM=xterm
+ TERM=xterm
+ mkdir -p /opt/Xilinx/petalinux/v2020.1
+ ./autoinstall_petalinux.sh depends/petalinux-v2020.1-final-installer.run /opt/Xilinx/petalinux/v2020.1
spawn depends/petalinux-v2020.1-final-installer.run -d /opt/Xilinx/petalinux/v2020.1
INFO: Checking installation environment requirements...
INFO: Checking free disk space
INFO: Checking installed tools
INFO: Checking installed development libraries
INFO: Checking network and other services
WARNING: No tftp server found - please refer to "UG1144  PetaLinux Tools Documentation Reference Guide" for its impact and solution
INFO: Checking installer checksum...
INFO: Extracting PetaLinux installer...

LICENSE AGREEMENTS

PetaLinux SDK contains software from a number of sources.  Please review
the following licenses and indicate your acceptance of each to continue.

You do not have to accept the licenses, however if you do not then you may 
not use PetaLinux SDK.

Use PgUp/PgDn to navigate the license viewer, and press 'q' to close

Press Enter to display the license agreements
Do you accept Xilinx End User License Agreement? [y/N] > y
Do you accept Webtalk Terms and Conditions? [y/N] > y
Do you accept Third Party End User License Agreement? [y/N] > y
INFO: Installing PetaLinux...
INFO: Checking PetaLinux installer integrity...
INFO: Installing PetaLinux SDK to "/opt/Xilinx/petalinux/v2020.1/."
INFO: Installing buildtools in /opt/Xilinx/petalinux/v2020.1/./components/yocto/buildtools
INFO: PetaLinux SDK has been installed to /opt/Xilinx/petalinux/v2020.1/.
+ echo '. /opt/Xilinx/petalinux/v2020.1/settings.sh'
+ . /opt/Xilinx/petalinux/v2020.1/settings.sh
++ SETTINGS_FILE=settings.sh
++ XIL_SCRIPT_LOC=./
++ '[' 0 '!=' 0 ']'
++ '[' /bin/sh == ksh ']'
++ XIL_SCRIPT_LOC_TMP_UNI=/opt/Xilinx/petalinux/v2020.1/settings.sh
++ XIL_SCRIPT_LOC_TMP_UNI=/opt/Xilinx/petalinux/v2020.1
++ '[' /opt/Xilinx/petalinux/v2020.1 '!=' '' ']'
++ '[' /opt/Xilinx/petalinux/v2020.1 == settings.sh ']'
+++ readlink -f /opt/Xilinx/petalinux/v2020.1
++ XIL_SCRIPT_LOC_TMP_UNI=/opt/Xilinx/petalinux/v2020.1
++ '[' 0 == 0 ']'
++ XIL_SCRIPT_LOC=/opt/Xilinx/petalinux/v2020.1
++ unset XIL_SCRIPT_LOC_TMP_UNI
+++ readlink -f /opt/Xilinx/petalinux/v2020.1
++ export PETALINUX=/opt/Xilinx/petalinux/v2020.1
++ PETALINUX=/opt/Xilinx/petalinux/v2020.1
++ echo /opt/Xilinx/petalinux/v2020.1
++ grep -q ' '
++ export PETALINUX_VER=2020.1
++ PETALINUX_VER=2020.1
++ export XSCT_TOOLCHAIN=/opt/Xilinx/petalinux/v2020.1/tools/xsct
++ XSCT_TOOLCHAIN=/opt/Xilinx/petalinux/v2020.1/tools/xsct
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ echo /opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ tr : '\n'
++ grep '^\./*$'
+++ echo /opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ tr : '\n'
+++ grep -v '^\./*$'
+++ tr '\n' :
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:
+++ echo /opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:
+++ sed -e 's/:*$//g' -e 's/::*/:/g'
++ PATH=/opt/Xilinx/petalinux/v2020.1/tools/xsct/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/common/petalinux/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/microblaze/lin/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/armr5/lin/gcc-arm-none-eabi/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch64/lin/aarch64-none/bin:/opt/Xilinx/petalinux/v2020.1/tools/xsct/gnu/aarch32/lin/gcc-arm-none-eabi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export PATH
++ echo PetaLinux environment set to ''\''/opt/Xilinx/petalinux/v2020.1'\'''
PetaLinux environment set to '/opt/Xilinx/petalinux/v2020.1'
++ for s in /bin/sh sh
++ /bin/sh --version
++ grep -q '^GNU bash'
++ for s in /bin/sh sh
++ sh --version
++ grep -q '^GNU bash'
++ echo /bin/bash
++ grep -q bash
++ /opt/Xilinx/petalinux/v2020.1/tools/common/petalinux//utils/petalinux-env-check
INFO: Checking free disk space
INFO: Checking installed tools
INFO: Checking installed development libraries
INFO: Checking network and other services
WARNING: No tftp server found - please refer to "UG1144 2020.1 PetaLinux Tools Documentation Reference Guide" for its impact and solution
+ petalinux-util --webtalk off
INFO: Turn off webtalk feature!
+ rm -rf /opt/Xilinx/tmp
+ sudo apt-get clean
+ sudo rm -rf /var/lib/apt/lists/auxfiles /var/lib/apt/lists/lock /var/lib/apt/lists/partial '/tmp/*' '/var/tmp/*'
+ sudo echo 'debconf debconf/frontend select Dialog'
+ sudo debconf-set-selections
Removing intermediate container 8ca901cbdcd6
 ---> 9f8850d71653
Successfully built 9f8850d71653
Successfully tagged xilinx-petalinux:v2020.1
+ '[' 1 -ne 0 ']'
+ set +x
-----------------------------------
Shutting down Python HTTP Server...
-----------------------------------
Killing process ID 27096
-----------------------------------
+ kill 27096
+ '[' 1 -ne 0 ']'
+ set +x
./build_image.sh: line 174: 27096 Terminated              python3 -m http.server
-----------------------------------
Image Build Complete...
STARTED :Thu Jul 16 14:28:16 EDT 2020
ENDED   :Thu Jul 16 14:32:43 EDT 2020
-----------------------------------
